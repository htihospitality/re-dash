(ns acme.model
  (:require [hti.re-dash :as rd]))

(defn register!
  []

  ;; Register subscriptions to the input parameters
  (rd/reg-sub      ::width  (fn [db [_ room]] (get-in db [room :width])))
  (rd/reg-sub      ::length (fn [db [_ room]] (get-in db [room :length])))

  ;; Subscribe to the Flow's output path
  (rd/reg-sub      ::area   (fn [db [_ room]] (get-in db [room :area])))

  (rd/reg-event-db ::inc-w  (fn [db [_ room]] (update-in db [room :width] (fnil inc 0))))
  (rd/reg-event-db ::inc-h  (fn [db [_ room]] (update-in db [room :length] (fnil inc 0))))
  (rd/reg-event-db ::init   (fn [db _]        (-> db
                                                  (update :kitchen merge {:width 10 :length 15})
                                                  (update :garage merge {:width 20 :length 20})))))
