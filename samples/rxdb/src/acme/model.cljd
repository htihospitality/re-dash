(ns acme.model
  (:require [hti.re-dash.core :as rd]
            [hti.re-dash.database.impl.rx-db :as rx]))

(def coll-name
  "The name for the RxCollection we use as application state."
  "AppState")

(defn register!
  []

  (rd/reg-sub
    ::app-state
    (fn [db [_ selector]]
      (rx/->query db coll-name selector)))

  (rd/reg-sub
    ::area
    (fn [db [_ room]]
      (get-in db [room :area])))

  (rd/reg-event-db
    ::inc-w
    (fn [_ _]
      (partial rx/update! "width" inc coll-name)))

  (rd/reg-event-db
    ::inc-h
    (fn [_ _]
      (partial rx/update! "length" inc coll-name)))

  (rd/reg-event-db
    ::dec-w
    (fn [_ _]
      (partial rx/update! "width" dec coll-name)))

  (rd/reg-event-db
    ::dec-h
    (fn [_ _]
      (partial rx/update! "length" dec coll-name)))

  (rd/reg-event-db
    ::flip-kill-switch
    (fn [_ _]
      (partial rx/update! "killSwitch" not coll-name)))

  ;; Initialize db
  (rd/reg-event-fx
    ::init
    (fn [_ _]
      {:db #(rx/insert! %
                        coll-name
                        {"id"         (str (DateTime/now))
                         "width"      20
                         "length"     20
                         "killSwitch" false})})))
