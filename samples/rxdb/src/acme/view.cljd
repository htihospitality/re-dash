(ns acme.view
  (:require ["package:flutter/material.dart" :as m]
            [cljd.flutter :as f]
            [acme.model :as model]
            [hti.re-dash.alpha :as rd]
            [hti.re-dash.database.impl.rx-db :as rx]))

(def description
  (f/widget
    (m/Container
      .padding (m/EdgeInsets.all 10)
      .margin (m/EdgeInsets.all 20)
      .decoration (m/BoxDecoration
                    .border (m/Border.all .width 1)
                    .borderRadius (m/BorderRadius.all (m/Radius.circular 20))))
    (m/Row
      .mainAxisAlignment m/MainAxisAlignment.center
      .crossAxisAlignment m/CrossAxisAlignment.center
      .children
      [(m/Icon m/Icons.info)
       (m/SizedBox .width 10)
       (m/Flexible
         .child (m/Text "Shows an example of how to use RxDB as the app state back-end database instead of the default path based Map Atom (NOTE - RxDB for Flutter is not yet production ready)."))])))


(def garage-calculator
  (f/widget
    :watch [width (rd/subscribe [::model/width])
            length (rd/subscribe [::model/length])
            area (rd/subscribe [::model/area])
            kill-switch (rd/subscribe [::model/kill-switch])]

    m/Expanded
    (m/Column
      .mainAxisAlignment m/MainAxisAlignment.center
      .children
      [(m/Row
         .mainAxisAlignment m/MainAxisAlignment.center
         .children
         [(m/IconButton
            .icon (m/Icon (m/Icons.remove_circle_outline))
            .onPressed #(rd/dispatch [::model/dec-w :garage]))
          (m/Text (str "Width: " width))
          (m/IconButton
            .icon (m/Icon (m/Icons.add_circle_outline))
            .onPressed #(rd/dispatch [::model/inc-w :garage]))])
       (m/Row
         .mainAxisAlignment m/MainAxisAlignment.center
         .children
         [(m/IconButton
            .icon (m/Icon (m/Icons.remove_circle_outline))
            .onPressed #(rd/dispatch [::model/dec-h :garage]))
          (m/Text (str "Length: " length))
          (m/IconButton
            .icon (m/Icon (m/Icons.add_circle_outline))
            .onPressed #(rd/dispatch [::model/inc-h :garage]))])
       (m/Divider)
       (m/Row
         .mainAxisAlignment m/MainAxisAlignment.center
         .children
         [(m/Text (str "Area (derived value from Flow): " area))])
       (m/Divider)
       (m/Row
         .mainAxisAlignment m/MainAxisAlignment.center
         .children
         [(m/Text "Flow kill switch:")
          (m/Switch
            .value (= :on kill-switch)
            .onChanged #(rd/dispatch [::model/flip-kill-switch (if % :on :off)]))])
       (m/SizedBox .height 8)
       (m/Row
         .mainAxisAlignment m/MainAxisAlignment.center
         .children
         [(m/OutlinedButton
            .child (m/Text "Clear Flow")
            .onPressed #(rd/dispatch [::model/clear-flow]))
          (m/SizedBox .width 16)
          (m/OutlinedButton
            .child (m/Text "Register Flow")
            .onPressed #(rd/dispatch [::model/reg-flow]))])])))

(def view
  (m/Column
    .mainAxisAlignment m/MainAxisAlignment.center
    .children
    [description
     garage-calculator]))
